---
name: Build SoltrOS Disk Images

on:
  workflow_dispatch:
    inputs:
      platform:
        required: true
        type: choice
        options:
          - amd64
          - arm64
  pull_request:
    branches:
      - main
    paths:
      - './disk_config/disk.toml'
      - './disk_config/iso.toml'
      - './.github/workflows/build-disk.yml'
  schedule:
    # Build weekly ISOs on Sundays at 8am UTC
    - cron: '0 8 * * 0'

env:
  IMAGE_NAME: "soltros-os"
  IMAGE_REGISTRY: "ghcr.io/${{ github.repository_owner }}"
  DEFAULT_TAG: "latest"
  BIB_IMAGE: "ghcr.io/lorbuschris/bootc-image-builder:20250608"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}-${{ inputs.platform }}
  cancel-in-progress: true

jobs:
  build:
    name: Build SoltrOS disk images
    runs-on: ${{ inputs.platform == 'amd64' && 'ubuntu-24.04' || 'ubuntu-24.04-arm' }}
    strategy:
      fail-fast: false
      matrix:
        disk-type: ["qcow2", "anaconda-iso", "raw"]
    permissions:
      contents: read
      packages: read
      id-token: write

    steps:
      - name: Prepare environment
        run: |
          USER_UID=$(id -u)
          USER_GID=$(id -g)
          # Concatenate the types with a hyphen
          DISK_TYPE=$(echo "${{ matrix.disk-type }}" | tr ' ' '-')
          # Lowercase the image uri
          echo "IMAGE_REGISTRY=${IMAGE_REGISTRY,,}" >> ${GITHUB_ENV}
          echo "IMAGE_NAME=${IMAGE_NAME,,}" >> ${GITHUB_ENV}
          echo "DISK_TYPE=${DISK_TYPE}" >> ${GITHUB_ENV}
          echo "USER_UID=${USER_UID}" >> ${GITHUB_ENV}
          echo "USER_GID=${USER_GID}" >> ${GITHUB_ENV}
          # Generate timestamp for artifacts
          echo "BUILD_DATE=$(date +%Y%m%d)" >> ${GITHUB_ENV}

      - name: Install dependencies
        if: inputs.platform == 'arm64'
        run: |
          set -x
          sudo apt update -y
          sudo apt install -y podman

      - name: Maximize build space
        if: inputs.platform != 'arm64'
        uses: ublue-os/remove-unwanted-software@cc0becac701cf642c8f0a6613bbdaf5dc36b259e # v9
        with:
          remove-codeql: true

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Create disk configuration files
        run: |
          mkdir -p disk_config

          # Create disk.toml for qcow2 and raw images
          cat > disk_config/disk.toml << 'EOF'
          [build]
          # Build configuration for SoltrOS disk images

          [image]
          name = "soltros-desktop"

          [customizations]
          # Default user setup - users will be created during installation
          # Ensure proper shell and home directory structure

          [customizations.kernel]
          # Use CachyOS kernel for better gaming performance
          name = "kernel-cachyos"

          [customizations.services]
          enabled = [
            "NetworkManager",
            "sshd",
            "thermald",
            "sddm"
          ]
          disabled = [
            "plymouth-start",
            "plymouth-read-write",
            "plymouth-quit",
            "plymouth-quit-wait"
          ]

          [customizations.firewall]
          enabled = true

          [customizations.timezone]
          timezone = "UTC"

          [customizations.locale]
          keyboard = "us"
          languages = ["en_US.UTF-8"]
          EOF

          # Create iso.toml for anaconda installer ISO
          cat > disk_config/iso.toml << 'EOF'
          [build]
          # Build configuration for SoltrOS installation ISO

          [image]
          name = "soltros-desktop-installer"

          [customizations]
          # ISO will use graphical installer
          # Users configure accounts during installation

          [customizations.installer]
          # Enable graphical installation
          unattended = false

          [customizations.kernel]
          # Use CachyOS kernel for better gaming performance
          name = "kernel-cachyos"

          [customizations.services]
          enabled = [
            "NetworkManager",
            "sshd",
            "thermald"
          ]
          disabled = [
            "plymouth-start",
            "plymouth-read-write",
            "plymouth-quit",
            "plymouth-quit-wait"
          ]

          [customizations.firewall]
          enabled = true

          [customizations.timezone]
          timezone = "UTC"

          [customizations.locale]
          keyboard = "us"
          languages = ["en_US.UTF-8"]
          EOF

      - name: Build disk images
        id: build
        uses: osbuild/bootc-image-builder-action@main
        with:
          builder-image: ${{ env.BIB_IMAGE }}
          config-file: ${{ matrix.disk-type == 'anaconda-iso' && './disk_config/iso.toml' || './disk_config/disk.toml' }}
          image: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.DEFAULT_TAG }}
          chown: ${{ env.USER_UID }}:${{ env.USER_GID }}
          types: ${{ matrix.disk-type }}
          additional-args: --use-librepo=True

      - name: Generate checksums
        if: github.event_name != 'pull_request'
        run: |
          cd ${{ steps.build.outputs.output-directory }}
          for file in *; do
            if [[ -f "$file" ]]; then
              sha256sum "$file" > "$file.sha256"
              echo "Generated checksum for $file"
            fi
          done

      - name: Upload disk images and checksums to Job Artifacts
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: soltros-${{ matrix.disk-type }}-${{ inputs.platform || 'amd64' }}-${{ env.BUILD_DATE }}
          path: ${{ steps.build.outputs.output-directory }}
          if-no-files-found: error
          retention-days: 30
          compression-level: 0
          overwrite: true
